name: Tag Release on Version Change

on:
  push:
    paths:
      - 'package.json'
  workflow_dispatch:

jobs:
  tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Extract version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          TAG="v${{ steps.get_version.outputs.version }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists"
            exit 1
          fi

      - name: Debug token access to GitHub (optional but useful)
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "üîê Testing GitHub access with token..."
          git ls-remote https://x-access-token:$GH_PAT@github.com/${{ github.repository }} || {
            echo "‚ùå Token does NOT have access to repo!"
            exit 1
          }

      - name: Create and push Git tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          TAG: ${{ steps.check_tag.outputs.tag }}
        run: |
          echo "üè∑Ô∏è Tagging and pushing: $TAG"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Safe: overwrite origin with authenticated URL
          git remote set-url origin https://x-access-token:$GH_PAT@github.com/${{ github.repository }}
          git tag "$TAG"
          git push origin "$TAG"
